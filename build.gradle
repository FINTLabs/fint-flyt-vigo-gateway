plugins {
    id 'org.springframework.boot' version '2.7.18'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.jetbrains.kotlin.jvm' version '1.8.22'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.8.22'
    id 'java'
    id 'com.github.ben-manes.versions' version '0.51.0'
}

group = 'no.fintlabs'
version = '0.0.1-SNAPSHOT'
java.sourceCompatibility = JavaVersion.VERSION_17

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

jar {
    enabled = false
}

bootJar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

repositories {
    mavenCentral()
    repositories {
        maven {
            url "https://repo.fintlabs.no/releases"
        }
    }
    mavenLocal()
}

sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin'
    main.java.srcDirs += 'src/main/java'
    test.kotlin.srcDirs += 'src/test/kotlin'
    test.java.srcDirs += 'src/test/java'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'io.netty:netty-resolver-dns-native-macos:4.1.101.Final:osx-aarch_64'

    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.hibernate.validator:hibernate-validator'

    implementation 'no.fintlabs:fint-kafka:4.0.1'
    implementation 'no.fintlabs:fint-flyt-kafka:3.1.1'

    implementation 'no.fintlabs:fint-flyt-instance-gateway:6.0.3'
    implementation 'no.fintlabs:fint-flyt-resource-server:5.0.0'

    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'cglib:cglib-nodep:3.3.0'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '17'
    }
}

test {
    useJUnitPlatform()
}
